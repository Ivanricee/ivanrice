---
const id = Astro.params;
interface Props {
  state: "static" | "fixed";
}
type HeadStyles = {
  header: string;
  nav: string;
  menuCont: string;
};
const { state } = Astro.props;
const headerArrStyles: Record<string, HeadStyles> = {
  ["static"]: {
    header: "absolute sm:top-16 top-5",
    nav: " 2xl:mx-16 border-green-lime-400/10 bg-gradient-to-r from-american-blue-600/80  to-transparent ",
    menuCont: "-md:-top-8 flex justify-center items-center",
  },
  ["fixed"]: {
    header: "fixed top-0",
    nav: "max-w-[119rem] m-auto mx-3 bg-gradient-to-r from-american-blue-650/85 to-american-blue-400/30 2xl:mx-64 border-green-lime-600/25",
    menuCont: "-md:-top-0 -md:h-[111dvh] flex justify-center items-center",
  },
};
const cstmtyles = headerArrStyles[state] ?? "";
const navItems = [
  {
    title: "Experiencia",
    url: "/ivanrice/#experience",
    ariaLabel: "experience",
  },
  {
    title: "Proyectos",
    url: "/ivanrice/#projects/?type=frontend",
    ariaLabel: "projects/?type=frontend",
  },
  {
    title: "Sobre Mi",
    url: "/ivanrice/#aboutme",
    ariaLabel: "aboutme",
  },
];
---

<header
  class={`flex justify-between items-center left-5 right-5 sm:left-16 sm:right-16 z-30 animate-fadeInBounce
 2xl:w-full 2xl:left-0 2xl:right-auto  ${cstmtyles.header}`}
>
  <nav
    class={`w-full home-title flex justify-between items-center border-2 rounded-md
    text-ottoman-50 px-2 backdrop-blur-sm  ${cstmtyles.nav}`}
  >
    <a
      href="/ivanrice/#introduce"
      class="relative font-mauline sm:text-3xl text-2xl pl-4 font-bold leading-none rounded"
    >
      <p>
        <span class="text-american-blue-100/80 font-biryani tracking-tighter"
          >{"<"}</span
        >
        <span class="tracking-wide text-american-blue-100/90">{`IVANRICE`}</span
        >
        <span class="text-american-blue-100/80 font-biryani tracking-tighter"
          >{"/>"}</span
        >
      </p>
    </a>
    <button
      data-collapse-toggle={state}
      type="button"
      class="relative z-20 inline-flex items-center p-2 w-30 h-30 justify-center text-lg text-american-blue-200 rounded-lg md:hidden
      -md:my-1 -md:mr-2 hover:bg-american-blue-600/75 focus:outline-none focus:ring-2 focus:ring-american-blue-400"
      aria-controls={state}
      aria-expanded="false"
    >
      <span class="sr-only">Abrir men√∫</span>
      <svg
        class="w-7 h-7"
        aria-hidden="true"
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 17 14"
      >
        <path
          stroke="currentColor"
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M1 1h15M1 7h15M1 13h15"></path>
      </svg>
    </button>
    <div
      class={`hidden md:block md:w-auto -md:absolute  -md:h-dvh -md:w-wvh  -md:-left-28 -md:-right-28 -md:-top-16 -md:bottom-20 -md:rounded-t-[2.7rem]
    -md:rounded-b-md -md:bg-american-blue-700/95 -md:backdrop-blur-md overflow-hidden ${cstmtyles.menuCont}`}
      id={state}
    >
      <ul
        class="justify-center items-center flex flex-col md:flex-row md:mt-0 md:border-0 h-20 rounded-3xl -md:h-[30rem] w-full"
      >
        {
          navItems.map((itemNav) => {
            return (
              <li class="w-full h-full ">
                <a
                  href={itemNav.url}
                  class="py-8 px-4 relative font-bold font-biryani text-sm tracking-wider  uppercase leading-none
                  hover:backdrop-blur-sm transition-all ease-in-out duration-500
                  -md:px-0 -md:py-7 -md:w-full -md:text-center -md:text-5xl
                  h-full inline-flex justify-center items-center"
                  aria-current="false"
                  aria-label={itemNav.ariaLabel}
                >
                  <span class="link-underline link-underline-black">
                    {itemNav.title}
                  </span>
                </a>
              </li>
            );
          })
        }
      </ul>
    </div>
  </nav>
</header>
<style>
  @keyframes blurHead {
    from {
      opacity: 0;
      transform: scale(1);
    }
    to {
      opacity: 1;
      transform: scale(1);
    }
  }
  @keyframes scaleHead {
    from {
      transform: scale(1.5), translateX(-5rem);
    }
    to {
      transform: scale(0.5);
    }
  }
  .home-title::before {
    view-timeline-name: --headerBlur;
    view-timeline-axis: block;

    animation: blurHead linear both;
    animation-timeline: --headerBlur;
    animation-range: exit;
  }
  .home-title {
    view-timeline-name: --headerScale;
    view-timeline-axis: block;

    animation: blurSec linear both;
    animation-timeline: --headerScale;
    animation-range: exit;
  }
</style>
<script>
  import { Collapse } from "flowbite";
  import { menuRoutingObserver } from "@/scripts";

  document.addEventListener("astro:page-load", () => {
    //Observer
    const sections = document.querySelectorAll(".section-menu");
    const navItems = document.querySelectorAll("header nav ul li a");
    if (!sections || !navItems)
      throw new Error("section or anchor Element Not found.");
    menuRoutingObserver({ navItems, sections });

    //Toggle menus
    const staticMenu = new Collapse(document.getElementById("static"));
    const fixedMenu = new Collapse(document.getElementById("fixed"));

    const hamburgerButton = document.querySelectorAll("[data-collapse-toggle]");
    if (!hamburgerButton) throw new Error("menu Element Not found.");
    hamburgerButton.forEach((button) => {
      button.addEventListener("click", toggleMenus);
    });
    //Toogle on link
    navItems.forEach((button) => {
      button.addEventListener("click", () => {
        staticMenu.collapse();
        fixedMenu.collapse();
      });
    });
    function toggleMenus() {
      staticMenu.toggle();
      fixedMenu.toggle();
    }
  });
</script>
