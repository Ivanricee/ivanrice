---
import { FRONTEND, TRESD } from "@/lib/constants";
import ProjectItem from "./ProjectItem.astro";
---

<section
  class="font-devina box-content md:h-[66rem] lg:h-[39rem]"
  transition:name="project-container"
  transition:persist
  transition:persist-props
>
  <div class="mb-4 flex justify-center w-full sm:w-1/2 lg:w-full">
    <ul
      class="flex text-xl font-semibold text-center rounded-lg justify-center relative z-10 w-60 h-[5.5rem]"
      id="default-tab"
      data-tabs-toggle="#default-tab-content"
      role="tablist"
    >
      <li class="focus-within:z-10 w-7/12 h-full" role="presentation">
        <button
          class="inline-block w-full h-full p-4
                text-ottoman-50/85 bg-green-lime-500/25 border-s-0 rounded-s-lg
                aria-selected:text-american-blue-900 aria-selected:border-0 aria-selected:bg-green-lime-500/90 aria-selected:font-extrabold
                hover:text-green-lime-400/70 hover:bg-green-lime-500/20 focus:ring-1 focus:outline-none focus:ring-green-lime-500/40"
          id="frontend-tab"
          data-tabs-target="#frontend"
          type="button"
          role="tab"
          aria-controls="frontend"
          aria-selected="false"
          role="tab"
        >
          FRONTEND
        </button>
      </li>
      <li class="focus-within:z-10 w-5/12 h-full" role="presentation">
        <button
          class="inline-block w-full p-4 h-full
              text-ottoman-50/90 bg-green-lime-500/25 border-s-0 rounded-e-lg
              aria-selected:text-american-blue-800 aria-selected:border-0 aria-selected:bg-green-lime-500/90 aria-selected:font-extrabold
              hover:text-green-lime-400/70 hover:bg-green-lime-400/20 focus:ring-1 focus:outline-none focus:ring-green-lime-500/40"
          id="tresd-tab"
          data-tabs-target="#tresd"
          type="button"
          role="tab"
          aria-controls="tresd"
          aria-selected="false"
          role="tab"
        >
          3D
        </button>
      </li>
    </ul>
  </div>
  <div id="default-tab-content" class="sm:-translate-y-[7.7rem]">
    <div
      class="hidden pt-4 rounded-lg border-0"
      id="frontend"
      role="tabpanel"
      aria-labelledby="frontend-tab"
    >
      <ProjectItem type={FRONTEND} />
    </div>
    <div
      class="hidden pt-4 rounded-lg border-0"
      id="tresd"
      role="tabpanel"
      aria-labelledby="tresd-tab"
    >
      <ProjectItem type={TRESD} />
    </div>
  </div>
</section>
<script>
  document.addEventListener("astro:page-load", () => {
    console.log("sdfdasfddsfadsfdfsfdsfdsfsdafasdf");
    const frontendTabButton = document.getElementById("frontend-tab");
    const tresdTabButton = document.getElementById("tresd-tab");
    if (!frontendTabButton || !tresdTabButton)
      throw new Error("menu items not found");
    frontendTabButton.addEventListener("click", (e) => {
      const target = e.target as HTMLElement;
      const name = target.getAttribute("aria-controls");
      history.replaceState({}, "", `/ivanrice/#projects/?type=${name}`);
    });

    tresdTabButton.addEventListener("click", (e) => {
      const target = e.target as HTMLElement;
      const name = target.getAttribute("aria-controls");
      history.replaceState({}, "", `/ivanrice/#projects/?type=${name}`);
    });
  });
</script>
<script>
  import { Tabs } from "flowbite";
  import type { TabsOptions, TabsInterface, TabItem } from "flowbite";
  import type { InstanceOptions } from "flowbite";

  function initializeFlowbiteTabs() {
    const tabsElement: HTMLElement | null =
      document.getElementById("default-tab");

    if (!tabsElement) throw new Error("not tab element found");

    const tabElements: TabItem[] = [
      {
        id: "frontend",
        triggerEl: document.querySelector("#frontend-tab") as HTMLElement,
        targetEl: document.querySelector("#frontend") as HTMLElement,
      },
      {
        id: "tresd",
        triggerEl: document.querySelector("#tresd-tab") as HTMLElement,
        targetEl: document.querySelector("#tresd") as HTMLElement,
      },
    ];

    const options: TabsOptions = {
      defaultTabId: "frontend",
      activeClasses:
        "text-blue-600 hover:text-blue-600 dark:text-blue-500 dark:hover:text-blue-400 border-blue-600 dark:border-blue-500",
      inactiveClasses:
        "text-gray-500 hover:text-gray-600 dark:text-gray-400 border-gray-100 hover:border-gray-300 dark:border-gray-700 dark:hover:text-gray-300",
    };

    // Instance options with default values
    const instanceOptions: InstanceOptions = {
      id: "default-tab",
      override: true,
    };

    // Create a new Tabs object based on the parameters previously set.
    const tabs: TabsInterface = new Tabs(
      tabsElement,
      tabElements,
      options,
      instanceOptions
    );
    tabs.show("tresd");
  }

  document.addEventListener("astro:page-load", () => {
    initializeFlowbiteTabs();
  });
</script>
